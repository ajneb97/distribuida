# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.2
#
# <auto-generated>
#
# Generated from file `Cara.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Demo
_M_Demo = Ice.openModule('Demo')
__name__ = 'Demo'

if '_t_ByteArray' not in _M_Demo.__dict__:
    _M_Demo._t_ByteArray = IcePy.defineSequence('::Demo::ByteArray', (), IcePy._t_byte)

_M_Demo._t_Cara = IcePy.defineValue('::Demo::Cara', Ice.Value, -1, (), False, True, None, ())

if 'CaraPrx' not in _M_Demo.__dict__:
    _M_Demo.CaraPrx = Ice.createTempClass()
    class CaraPrx(Ice.ObjectPrx):

        def getCaras(self, b, context=None):
            return _M_Demo.Cara._op_getCaras.invoke(self, ((b, ), context))

        def getCarasAsync(self, b, context=None):
            return _M_Demo.Cara._op_getCaras.invokeAsync(self, ((b, ), context))

        def begin_getCaras(self, b, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.Cara._op_getCaras.begin(self, ((b, ), _response, _ex, _sent, context))

        def end_getCaras(self, _r):
            return _M_Demo.Cara._op_getCaras.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo.CaraPrx.ice_checkedCast(proxy, '::Demo::Cara', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo.CaraPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo::Cara'
    _M_Demo._t_CaraPrx = IcePy.defineProxy('::Demo::Cara', CaraPrx)

    _M_Demo.CaraPrx = CaraPrx
    del CaraPrx

    _M_Demo.Cara = Ice.createTempClass()
    class Cara(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo::Cara', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo::Cara'

        @staticmethod
        def ice_staticId():
            return '::Demo::Cara'

        def getCaras(self, b, current=None):
            raise NotImplementedError("servant method 'getCaras' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo._t_CaraDisp)

        __repr__ = __str__

    _M_Demo._t_CaraDisp = IcePy.defineClass('::Demo::Cara', Cara, (), None, ())
    Cara._ice_type = _M_Demo._t_CaraDisp

    Cara._op_getCaras = IcePy.Operation('getCaras', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), _M_Demo._t_ByteArray, False, 0),), (), ((), IcePy._t_string, False, 0), ())

    _M_Demo.Cara = Cara
    del Cara

# End of module Demo
